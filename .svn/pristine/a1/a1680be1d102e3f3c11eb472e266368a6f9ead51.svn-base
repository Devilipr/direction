/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.thinkgem.jeesite.modules.liux.high.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.liux.high.entity.High;
import com.thinkgem.jeesite.modules.liux.high.service.HighService;

/**
 * 高拍仪Controller
 * @author zyb
 * @version 2017-11-23
 */
@Controller
@RequestMapping(value = "${adminPath}/high/high")
public class HighController extends BaseController {

	@Autowired
	private HighService highService;
	
	@ModelAttribute
	public High get(@RequestParam(required=false) String id) {
		High entity = null;
		High hi=new High();
		if (StringUtils.isNotBlank(id)){
			hi.setSpbh(id);
			entity = highService.get(hi);
		}
		if (entity == null){
			entity = new High();
		}
		return entity;
	}
	
	@RequiresPermissions("high:high:view")
	@RequestMapping(value = {"list", ""})
	public String list(High high, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<High> page = highService.findPage(new Page<High>(request, response), high); 
		model.addAttribute("page", page);
		return "modules/liuxxt/highList";
	}

	@RequiresPermissions("high:high:view")
	@RequestMapping(value = "form")
	public String form(High high, Model model) {
		model.addAttribute("high", high);
		return "modules/liuxxt/highForm";
	}

	@RequiresPermissions("high:high:edit")
	@RequestMapping(value = "save")
	public String save(High high, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, high)){
			return form(high, model);
		}
		highService.save(high);
		addMessage(redirectAttributes, "保存高拍仪成功");
		return null;
	}
	
	@RequiresPermissions("high:high:edit")
	@RequestMapping(value = "delete")
	public String delete(High high, RedirectAttributes redirectAttributes) {
		highService.delete(high);
		addMessage(redirectAttributes, "删除高拍仪成功");
		return "redirect:"+Global.getAdminPath()+"/high/high/?repage";
	}

}