package com.thinkgem.jeesite.modules.liux.factory.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.utils.DateUtils;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.common.utils.excel.ExportExcel;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.modules.liux.factory.entity.Factory;
import com.thinkgem.jeesite.modules.liux.factory.service.FactoryService;
import com.thinkgem.jeesite.modules.sys.entity.User;
import com.thinkgem.jeesite.modules.sys.utils.UserUtils;
@Controller
@RequestMapping(value = "${adminPath}/factory/factory")
public class FactoryController extends BaseController{
	@Autowired
	private FactoryService factoryService;
	@ModelAttribute
	public Factory get(@RequestParam(required=false) String id) {
		Factory entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = factoryService.get(id);
		}
		if (entity == null){
			entity = new Factory();
		}
		return entity;
	}
	@RequiresPermissions("factory:factory:view")
	@RequestMapping(value = {"list", ""})
	public String list(Factory factory, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<Factory> page = factoryService.findPage(new Page<Factory>(request, response), factory); 
		model.addAttribute("page", page);
		return "modules/liuxxt/factoryList";
	}
	@RequiresPermissions("factory:factory:view")
	@RequestMapping(value = {"listFactory"})
	public String listFactory(Factory factory, HttpServletRequest request, HttpServletResponse response, Model model) {
		User user = UserUtils.getUser() ;
		if(user!=null){
			 String userName=user.getName();
			 factory.setpCaozy(userName);
		}
		List<Factory> page = factoryService.findList(factory);
		model.addAttribute("page", page);
		return "modules/liuxxt/factoryList";
	}

	/**
	 * 导出用户数据
	 * @param user
	 * @param request
	 * @param response
	 * @param redirectAttributes
	 * @return
	 */
	@RequiresPermissions("factory:factory:view")
    @RequestMapping(value = "export", method=RequestMethod.POST)
    public String exportFile(Factory factory, HttpServletRequest request, HttpServletResponse response, RedirectAttributes redirectAttributes) {
		try {
            String fileName = "采厂家库存数据"+DateUtils.getDate("yyyyMMddHHmmss")+".xlsx";
            User user = UserUtils.getUser() ;
    		if(user!=null){
    			 String userName=user.getName();
    			 factory.setpCaozy(userName);
    		}
            List<Factory> list=factoryService.findList(factory);
            new ExportExcel("厂家库存数据", Factory.class).setDataList(list).write(response, fileName).dispose();
    		return null;
		} catch (Exception e) {
			addMessage(redirectAttributes, "导出用户失败！失败信息："+e.getMessage());
		}
		return "redirect:"+Global.getAdminPath()+"/factory/factory/?repage";
    }
}
