package com.thinkgem.jeesite.modules.liux.vspkfk.web;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.io.FileUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.modules.liux.high.entity.High;
import com.thinkgem.jeesite.modules.liux.high.entity.HighDes;
import com.thinkgem.jeesite.modules.liux.high.service.HighService;
import com.thinkgem.jeesite.modules.liux.vspkfk.entity.Vspkfk;
import com.thinkgem.jeesite.modules.liux.vspkfk.service.VspkfkService;
@Controller
@RequestMapping(value = "${adminPath}/vspkfk/vspkfk")
public class VspkfkController extends BaseController {
	@Autowired
	private VspkfkService vspkfkService;
	@Autowired
	private HighService highService;
	@ModelAttribute
	public Vspkfk get(@RequestParam(required=false) String id) {
		Vspkfk entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = vspkfkService.get(id);
		}
		if (entity == null){
			entity = new Vspkfk();
		}
		return entity;
	}
	@RequiresPermissions("vspkfk:vspkfk:view")
	@RequestMapping(value = {"list", ""})
	public String list(Vspkfk vspkfk, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<Vspkfk> page = vspkfkService.findPage(new Page<Vspkfk>(request, response), vspkfk); 
		model.addAttribute("page", page);
		return "modules/liuxxt/vspkfkList";
	}
	@RequiresPermissions("vspkfk:vspkfk:view")
	@RequestMapping(value = "form")
	public String form(Vspkfk vspkfk, Model model) {
		model.addAttribute("vspkfk", vspkfk);
		return "modules/liuxxt/CaptureVideo";
	}
	@RequiresPermissions("vspkfk:vspkfk:view")
	@RequestMapping(value = {"updateVapure"})
	@ResponseBody
	public String updateVapure(Vspkfk vspkfk,HttpServletRequest request, HttpServletResponse response, Model model){
		
		String url=request.getParameter("captureUrl");
		String fileName=request.getParameter("fileName");
		String savePath=null;
		try {
			savePath = request.getSession().getServletContext().getRealPath("/") + "upload" + "/";
			File file1=new File(url);
			File file=new File(savePath,fileName);
			FileUtils.copyFile(file1, file);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		vspkfk=vspkfkService.get(vspkfk.getSpbh());
		if (vspkfk!=null) {
			List<HighDes> higDesList=new ArrayList<HighDes>();
			HighDes highDes=new HighDes();
			High high=new High();
			high.setSpbh(vspkfk.getSpbh());
			highDes.setSpbh(high);
			highDes.setSpmch(vspkfk.getSpmch());
			highDes.setZjm(vspkfk.getZjm());
			highDes.setShpgg(vspkfk.getShpgg());
			highDes.setBeactive(vspkfk.getBeactive());
			highDes.setShengccj(vspkfk.getShengccj());
			highDes.setPizhwn(vspkfk.getPizhwh());
			highDes.setStorerkey(vspkfk.getStorerkey());
			highDes.setImgUrl(fileName);
			higDesList.add(highDes);
			high.setHighDesList(higDesList);
			high.setSpmch(vspkfk.getSpmch());
			high.setZjm(vspkfk.getZjm());
			high.setShpgg(vspkfk.getShpgg());
			high.setBeactive(vspkfk.getBeactive());
			high.setShengccj(vspkfk.getShengccj());
			high.setPizhwh(vspkfk.getPizhwh());
			high.setStorerkey(vspkfk.getStorerkey());
			highService.save(high);
		 }
		return "";
	}
}
