package com.thinkgem.jeesite.modules.liux.vmchk.web;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FileUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.modules.liux.mchk.entity.Mchk;
import com.thinkgem.jeesite.modules.liux.mchk.entity.MchkDes;
import com.thinkgem.jeesite.modules.liux.mchk.service.MchkService;
import com.thinkgem.jeesite.modules.liux.vmchk.entity.Vmchk;
import com.thinkgem.jeesite.modules.liux.vmchk.service.VmchkService;
/**
 * 客商
 * @author zhao
 *
 */
@Controller
@RequestMapping(value = "${adminPath}/vmchk/vmchk")
public class VmchkController  extends BaseController {
	@Autowired
	private VmchkService vmchkService;
	@Autowired
	private MchkService mchkService;
	@ModelAttribute
	public Vmchk get(@RequestParam(required=false) String id) {
		Vmchk entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = vmchkService.get(id);
		}
		if (entity == null){
			entity = new Vmchk();
		}
		return entity;
	}
	@RequiresPermissions("vmchk:vmchk:view")
	@RequestMapping(value = {"list", ""})
	public String list(Vmchk vmchk, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<Vmchk> page = vmchkService.findPage(new Page<Vmchk>(request, response), vmchk); 
		model.addAttribute("page", page);
		return "modules/liuxxt/vmchkList";
	}
	@RequiresPermissions("vmchk:vmchk:view")
	@RequestMapping(value = "form")
	public String form(Vmchk vmchk,Mchk mchk, Model model) {
		model.addAttribute("vmchk", vmchk);
		model.addAttribute("mchk", mchk);
		return "modules/liuxxt/vmchkCaptureVideo";
	}

	/*@RequiresPermissions("vmchk:vmchk:edit")
	@RequestMapping(value = "save")
	public String save(Vmchk vmchk, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, vmchk)){
			return form(vmchk, model);
		}
		vmchkService.save(vmchk);
		addMessage(redirectAttributes, "保存客商存成功");
		return "redirect:"+Global.getAdminPath()+"/vmchk/vmchk/?repage";
	}*/
	
	@RequiresPermissions("vmchk:vmchk:edit")
	@RequestMapping(value = "delete")
	public String delete(Vmchk vmchk, RedirectAttributes redirectAttributes) {
		vmchkService.delete(vmchk);
		addMessage(redirectAttributes, "删除客商成功");
		return "redirect:"+Global.getAdminPath()+"/vmchk/vmchk/?repage";
	}
	@RequiresPermissions("vmchk:vmchk:view")
	@RequestMapping(value = {"updateVapure"})
	@ResponseBody
	public String updateVapure(Vmchk vmchk,String drugType,HttpServletRequest request, HttpServletResponse response, Model model){
		
		String url=request.getParameter("captureUrl");
		String fileName=request.getParameter("fileName");
		String savePath=null;
		try {
			savePath = request.getSession().getServletContext().getRealPath("/") + "upload" + "/";
			File file1=new File(url);
			File file=new File(savePath,fileName);
			FileUtils.copyFile(file1, file);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		vmchk=vmchkService.get(vmchk.getDwbh());
		if (vmchk!=null) {
			List<MchkDes> mchkDesList=new ArrayList<MchkDes>();
			MchkDes mchkDes=new MchkDes();
			Mchk mchk=new Mchk();
			mchk.setDwbh(vmchk.getDwbh());;
			mchkDes.setDwbh(mchk);
			mchkDes.setDwmch(vmchk.getDwmch());
			mchkDes.setImgurl(fileName);
			mchkDes.setDrugType(drugType);
			mchkDesList.add(mchkDes);
			mchk.setDwmch(vmchk.getDwmch());
			mchk.setZjm(vmchk.getZjm());
			mchk.setShh(vmchk.getShh());
			mchk.setDrugType(drugType);
			mchk.setDzhdh(vmchk.getDzhdh());
			mchk.setMchkDesList(mchkDesList);
			mchkService.save(mchk);
		 }
		return "";
	}
}
